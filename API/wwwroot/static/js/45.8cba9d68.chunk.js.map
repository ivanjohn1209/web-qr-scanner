{"version":3,"file":"static/js/45.8cba9d68.chunk.js","mappings":"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","sources":["dashboard/GradeTable.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport {\r\n  Table,\r\n  Button,\r\n  Space,\r\n  Select,\r\n  notification,\r\n  Drawer,\r\n  Form,\r\n  Col,\r\n  Row,\r\n  Input,\r\n} from 'antd';\r\nimport { } from \"moment\"\r\nimport { StudentService } from '../service/StudentService';\r\nimport { SectionEnumList } from '../Enum/SectionEnum';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { IsArrEmpty, IsEmpty } from '../utility/ToolFtc';\r\nimport {\r\n  PlusOutlined\r\n} from '@ant-design/icons';\r\nimport StudentEditor from './StudentEditor';\r\nimport { GradeEnum, GradeEnumList } from '../Enum/GradeEnum';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nconst { Option } = Select;\r\n\r\nfunction GradeTable(props) {\r\n  const [list, setList] = useState([]);\r\n  const [sectionList, setSectionList] = useState([]);\r\n  const [date, setDate] = useState(new Date());\r\n  const [grade, setgrade] = useState(GradeEnum.seven)\r\n  const [section, setSection] = useState('');\r\n  const [loading, setloading] = useState(false)\r\n  const [formShow, setformShow] = useState(false)\r\n  const { gradeLevel } = useParams();\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    if (!IsEmpty(gradeLevel)) {\r\n      let gradeKey = GradeEnumList.findIndex(e => e.path === gradeLevel)\r\n      if (gradeKey !== -1) {\r\n        let grade = GradeEnumList[gradeKey]\r\n        setgrade(grade.v)\r\n      } else {\r\n        navigate(\"/dashboard/not-found\");\r\n      }\r\n    }\r\n  }, [gradeLevel])\r\n\r\n  useEffect(() => {\r\n    let secList = SectionEnumList.filter(e => e.grade === grade);\r\n    if (!IsArrEmpty(secList)) {\r\n      setSectionList(secList)\r\n      setSection(secList[0].v)\r\n      getList()\r\n    }\r\n  }, [grade, date, section])\r\n  const getList = () => {\r\n    setloading(true)\r\n    let data = {\r\n      section: section,\r\n      grade: grade,\r\n      date: date\r\n    }\r\n    setList([])\r\n    StudentService.listStudent(data)\r\n      .then(res => {\r\n        setList(res)\r\n        setloading(false)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        notification.error({\r\n          message: \"Error\",\r\n          description: err,\r\n          onClick: () => {\r\n            console.log('Notification Clicked!');\r\n          },\r\n        })\r\n      })\r\n  }\r\n  const dateChange = (date) => {\r\n    console.log(date)\r\n  }\r\n  const afterSave = () => {\r\n    setformShow(false);\r\n    getList()\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div style={{ display: \"flex\", alignItems: \"center\", marginBottom: \"1rem\" }}>\r\n        <h3 style={{ marginRight: 5, marginBottom: 0 }}>Students</h3>\r\n        <Button icon={<PlusOutlined />} onClick={() => setformShow(true)} type=\"primary\">Add</Button>\r\n      </div>\r\n      <div className='toolbar'>\r\n        <div>\r\n          <Select placeholder=\"Section\" value={section} style={{ width: 220 }} onChange={setSection}>\r\n            {\r\n              sectionList.map((val, key) => {\r\n                return <Option value={val.v} key={key}>{val.t}</Option>\r\n              })\r\n            }\r\n          </Select>\r\n        </div>\r\n        <div>\r\n          <DatePicker className='ant-picker' selected={date} onChange={e => setDate(e)} />\r\n        </div>\r\n      </div>\r\n      <div className='ant-table-content'>\r\n        <table>\r\n          <thead className='ant-table-thead'>\r\n            <tr>\r\n              <th style={{ width: 30 }}>id</th>\r\n              <th>Lastname</th>\r\n              <th>First Name</th>\r\n              <th>Middle Name</th>\r\n              <th>Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody className='ant-table-tbody'>\r\n            {\r\n              IsArrEmpty(list) ? <tr><td colSpan={5} style={{ textAlign: \"center\" }}>No Data Available</td></tr> :\r\n                list.map((val, key) => {\r\n                  return (\r\n                    <tr key={key}>\r\n                      <td>{key}</td>\r\n                      <td>{val.lastName}</td>\r\n                      <td>{val.firstName}</td>\r\n                      <td>{val.middleName}</td>\r\n                      <td>{val.present ? \"Present\" : \"Absent\"}</td>\r\n                    </tr>\r\n                  )\r\n                })\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <Drawer\r\n        title=\"Create a new student\"\r\n        width={720}\r\n        visible={formShow}\r\n        bodyStyle={{ paddingBottom: 80 }}\r\n        onClose={() => setformShow(false)}\r\n        extra={\r\n          <Space>\r\n            <Button onClick={() => setformShow(false)}>Cancel</Button>\r\n          </Space>\r\n        }\r\n      >\r\n        <StudentEditor afterSave={afterSave} />\r\n      </Drawer>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default GradeTable"],"names":["Option","Select","props","useState","list","setList","sectionList","setSectionList","Date","date","setDate","GradeEnum","grade","setgrade","section","setSection","setloading","formShow","setformShow","gradeLevel","useParams","navigate","useNavigate","useEffect","IsEmpty","gradeKey","GradeEnumList","e","path","v","secList","SectionEnumList","IsArrEmpty","getList","data","StudentService","then","res","catch","err","console","log","notification","message","description","onClick","style","display","alignItems","marginBottom","marginRight","icon","type","className","placeholder","value","width","onChange","map","val","key","t","selected","colSpan","textAlign","lastName","firstName","middleName","present","title","visible","bodyStyle","paddingBottom","onClose","extra","afterSave"],"sourceRoot":""}